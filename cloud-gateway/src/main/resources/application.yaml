server:
  port: 8060

spring:
  application:
    name: ${artifactId}
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    sentinel:
      enabled: false # 是否启用sentinel
#      filter:
#        enabled: false
      transport:
        # 本地端口
        port: 8720
        # sentinel服务端地址
        dashboard: localhost:8090
      scg:
        fallback:
          mode: response # 限流/降级时支持返回内容或跳转界面 redirect or response
          response-body: '{"code":429,"msg":"请求失败，请稍后重试！"}' # 返回的内容
          response-status: 429 # 返回的http状态码
          redirect: http://baidu.com # 跳转地址
      datasource:
        gw-flow:
          nacos:
            server-addr: localhost:8848
            dataId: ${spring.application.name}-gateway-flow
            groupId: SENTINEL_GROUP
            data-type: json # 默认json
            rule-type: gw-flow
        gw-api:
          nacos:
            server-addr: localhost:8848
            dataId: ${spring.application.name}-gateway-api
            groupId: SENTINEL_GROUP
            data-type: json # 默认json
            rule-type: gw-api-group
    # 路由网关配置
    gateway:
      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能
      # 配置路由规则，默认什么都不配时，可使用服务名进行访问服务接口
      routes:
      # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：官方文档
      - id: CLOUD-ORDER-SERVICE
        # 采用写死的方式请求
        # uri: http://localhost:10091
        # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
        uri: lb://cloud-order-service-nacos
        # Predicate(断言)，必须，主要作用是匹配用户的请求，有很多种用法
        predicates:
        - Path=/order/** # Path，根据访问路径匹配，即可直接用/order代替完整服务名
#        - After=2021-05-26T10:23:13.880+08:00[Asia/Shanghai] # After 这个时间之后才能访问，Before之前，Between之间
#        - Cookie=username, test # Cookie，请求必须包含Cookie，且名称为username，值为test（支持正则）
#        - Method=GET,POST # Method，只接受GET和POST请求
#        - Header=token, \d+ # Header，请求必须包含header，且名称为token，值为数字（支持正则）
#        - Query=username # Query 请求必须包含参数，参数名为username，也可指定参数值username, test
#        - RemoteAddr=192.168.1.1/24 # RemoteAddr 只允许某个ip段访问此接口
      - id: CLOUD-USER-SERVICE
        uri: lb://cloud-user-service-nacos
        predicates:
        - Path=/user/**