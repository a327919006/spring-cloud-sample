server:
  port: 8060

spring:
  application:
    name: ${artifactId}
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    sentinel:
      transport:
        # 本地端口
        port: 8720
        # sentinel服务端地址
        dashboard: localhost:8090
    # 路由网关配置
    gateway:
      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能
      # 配置路由规则
      routes:
      # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
      - id: CLOUD-ORDER-SERVICE
        # 采用写死的方式请求
        # uri: http://localhost:10091
        # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
        uri: lb://cloud-order-service-nacos
        # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
        predicates:
        # Method 方法谓词，这里是匹配 GET 和 POST 请求
        - Method=GET,POST
        - Path=/order/**
      - id: CLOUD-USER-SERVICE
        uri: lb://cloud-user-service-nacos
        predicates:
        - Path=/user/**